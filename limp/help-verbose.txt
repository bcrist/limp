For each input file, LIMP will look for comments that contain '!!' immediately
following the comment opener.  It will then treat the comment as Lua code
until it encounters another '!!' sequence or the end of the comment.  If it
finds a second '!!', it will try to interpret the remaining characters as an
integer, indicating the number of lines following the comment which were
previously generated by LIMP.  These lines will be replaced by any lines
generated by the Lua code.

The sequences of characters that are treated as comment openers and closers
can be customized by creating a .limplangs file in the directory that contains
the limp executable.  Blank lines and lines that begin with '#' are ignored.
Otherwise, each line must have exactly 3 tokens separated by whitespace.  The
first is the file extension for which the line applies (without the
leading '.').  The second token is a sequence of characters that denotes the
start of a comment, and the last is one that end a comment.  If the same
extension is specified multiple times, only the last one is valid.  If a line
is specified for the extension '!!', it overrides the default '!!' tokens that
indicate the start and end of Lua code.

Note: LIMP does not do any Lua syntax parsing when looking for the LIMP and/or
comment end tokens.  In particular '!!' will be found even if it is inside a
Lua string literal.

When there are multiple input files being processed, a new Lua environment is
constructed for each input file that is processed.  Files are processed in no
particular order.

If there are multiple LIMP comments in the same file, they will be processed
sequentially, using the same environment for all comments (but each comment is
loaded as a separate chunk, so they do not share locals).

For each Lua environment that is created, the working directory will be set to
the parent directory of the file being processed.  If that directory contains
a .limprc file, it will be loaded and executed.  Otherwise the parent
directory chain will be recursively searched until a .limprc file is found and
executed or the filesystem root is reached.

